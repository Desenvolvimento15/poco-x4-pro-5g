"use strict";
function yall(e) {
  const t = (e = e || {}).lazyClass || "lazy",
    o = e.lazyBackgroundClass || "lazy-bg",
    s = "idleLoadTimeout" in e ? e.idleLoadTimeout : 200,
    n = e.observeChanges || !1,
    i = e.events || {},
    r = e.noPolyfill || !1,
    a = window,
    l = "requestIdleCallback",
    d = "IntersectionObserver",
    c = d in a && `${d}Entry` in a,
    u = /baidu|(?:google|bing|yandex|duckduck)bot/i.test(navigator.userAgent),
    v = ["srcset", "src", "poster"],
    b = [],
    g = (e, s) =>
      b.slice.call(
        (s || document).querySelectorAll(
          e || `img.${t},video.${t},iframe.${t},.${o}`
        )
      ),
    y = (t) => {
      const s = t.parentNode;
      "PICTURE" == s.nodeName && h(g("source", s), f),
        "VIDEO" == t.nodeName && h(g("source", t), f),
        f(t);
      const n = t.classList;
      n.contains(o) &&
        (n.remove(o), n.add(e.lazyBackgroundLoaded || "lazy-bg-loaded"));
    },
    m = (e) => {
      for (let t in i)
        e.addEventListener(t, i[t].listener || i[t], i[t].options || void 0);
    },
    f = (e) => {
      for (let o in v)
        if (v[o] in e.dataset) {
          e.setAttribute(v[o], e.dataset[v[o]]);
          const s = e.parentNode;
          "SOURCE" === e.nodeName &&
            s.autoplay &&
            (s.load(),
            /Trident/.test(navigator.userAgent) && s.play(),
            s.classList.remove(t)),
            e.classList.remove(t);
        }
    },
    h = (e, t) => {
      for (let o = 0; o < e.length; o++)
        a[d] && t instanceof a[d] ? t.observe(e[o]) : t(e[o]);
    },
    p = (t) => {
      new MutationObserver(() => {
        h(g(), (e) => {
          L.indexOf(e) < 0 &&
            (L.push(e), m(e), c && !u ? O.observe(e) : (r || u) && h(L, y));
        });
      }).observe(
        t,
        e.mutationObserverOptions || { childList: !0, subtree: !0 }
      );
    };
  let L = g();
  if ((h(L, m), c && !u)) {
    var O = new a[d](
      (e) => {
        h(e, (e) => {
          if (e.isIntersecting || e.intersectionRatio) {
            const t = e.target;
            l in a && s
              ? a[l](
                  () => {
                    y(t);
                  },
                  { timeout: s }
                )
              : y(t),
              O.unobserve(t),
              (L = L.filter((e) => e != t)).length || n || O.disconnect();
          }
        });
      },
      { rootMargin: `${"threshold" in e ? e.threshold : 200}px 0%` }
    );
    h(L, O), n && h(g(e.observeRootSelector || "body"), p);
  } else (r || u) && h(L, y);
}
